{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red108\green54\blue169;\red50\green109\blue116;\red57\green0\blue160;\red196\green26\blue22;\red11\green79\blue121;
\red15\green104\blue160;\red93\green108\blue121;\red28\green70\blue74;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c4314\c30980\c47451;
\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c10981\c27276\c28869;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15060\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\b\fs24 \cf2 \cb3 import
\f1\b0 \cf4  UIKit\

\f0\b \cf2 import
\f1\b0 \cf4  CoreBluetooth\

\f0\b \cf2 import
\f1\b0 \cf4  CoreLocation\

\f0\b \cf2 import
\f1\b0 \cf4  GoogleMaps\

\f0\b \cf2 import
\f1\b0 \cf4  GoogleMobileAds\
\
\
//Initialisation.  *************************\
    \
        
\f0\b \cf2 let
\f1\b0 \cf4  opts = [\cf5 CBCentralManagerOptionShowPowerAlertKey\cf4 : 
\f0\b \cf2 false
\f1\b0 \cf4 ]\
        \cf6 centralManager\cf4  = \cf7 CBCentralManager\cf4 (\cf5 delegate\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 , \cf5 queue\cf4 : DispatchQueue.\cf5 main\cf4 , \cf5 options\cf4 : opts)\
        \cf5 peripheralManager\cf4  = \cf7 CBPeripheralManager\cf4 (\cf5 delegate\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 , \cf5 queue\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
        \cf6 scheduledTimerWithTimeInterval\cf4 ()\
        \
                
\f0\b \cf2 let
\f1\b0 \cf4  manager = \cf7 CBCentralManager\cf4 (\cf5 delegate\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 ,\
                                               \cf5 queue\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 ,\
                                               \cf5 options\cf4 : opts)\
\
//Values **********************************************\
\
\{\
            
\f0\b \cf2 if
\f1\b0 \cf4   (responseData != 
\f0\b \cf2 nil
\f1\b0 \cf4 ) && (responseData?.\cf5 object\cf4 (\cf5 forKey\cf4 : \cf8 "status"\cf4 )) 
\f0\b \cf2 as
\f1\b0 \cf4 ! \cf7 String\cf4  == \cf8 "true"\cf4 \
            \{\
                                       
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 appDelegate\cf4 .\cf6 arrBLTUserList\cf4  = ((responseData?.\cf5 object\cf4 (\cf5 forKey\cf4 : \cf8 "data"\cf4 )
\f0\b \cf2 as
\f1\b0 \cf4 !\cf7 NSDictionary\cf4 ).\cf5 object\cf4 (\cf5 forKey\cf4 : \cf8 "data"\cf4 )
\f0\b \cf2 as
\f1\b0 \cf4 !\cf7 NSArray\cf4 ).\cf5 mutableCopy\cf4 () 
\f0\b \cf2 as
\f1\b0 \cf4 ! \cf7 NSMutableArray\cf4 \
                \
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 appDelegate\cf4 .\cf6 arrBLTUserList\cf4  = \cf6 getUsersObjectArray\cf4 (\cf6 arrResult\cf4 : responseData?.\cf5 object\cf4 (\cf5 forKey\cf4 : \cf8 "data"\cf4 ) 
\f0\b \cf2 as
\f1\b0 \cf4 ? \cf7 NSArray\cf4  ?? \cf7 NSArray\cf4 ())\
                \
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 addAnnotation\cf4 ()\
                \
            \}\
            
\f0\b \cf2 else
\f1\b0 \cf4  \{\
                
\f0\b \cf2 if
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  error = responseData?.\cf5 value\cf4 (\cf5 forKey\cf4 : \cf8 "error"\cf4 ) 
\f0\b \cf2 as
\f1\b0 \cf4 ? \cf7 String\cf4  \{\
                    
\f0\b \cf2 if
\f1\b0 \cf4  error == \cf8 "Your account is deactivated by admin team."\cf4  \{\
                        
\f0\b \cf2 let
\f1\b0 \cf4  alert = \cf7 UIAlertController\cf4 (\cf5 title\cf4 : \cf8 "Error"\cf4 , \cf5 message\cf4 : \cf8 "Your account has been deleted by the Admin. Please contact the Admin for further details"\cf4 , \cf5 preferredStyle\cf4 : .\cf5 alert\cf4 )\
                        alert.\cf5 addAction\cf4 (\cf7 UIAlertAction\cf4 (\cf5 title\cf4 : \cf8 "OK"\cf4 , \cf5 style\cf4 : .\cf5 default\cf4 , \cf5 handler\cf4 : \{ (alert) 
\f0\b \cf2 in
\f1\b0 \cf4 \
                            
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 appDelegate\cf4 .\cf6 logoutAndClearDefaults\cf4 ()\
                        \}))\
                        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf5 present\cf4 (alert, \cf5 animated\cf4 : 
\f0\b \cf2 true
\f1\b0 \cf4 , \cf5 completion\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
                    \}\
                    
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4  error == \cf8 "token_expired"\cf4  || error == \cf8 "token_invalid"\cf4 \
                    \{\
                        
\f0\b \cf2 let
\f1\b0 \cf4  alert = \cf7 UIAlertController\cf4 (\cf5 title\cf4 : \cf8 "Error"\cf4 , \cf5 message\cf4 : \cf8 "Your token  has been expired or invalid"\cf4 , \cf5 preferredStyle\cf4 : .\cf5 alert\cf4 )\
                        alert.\cf5 addAction\cf4 (\cf7 UIAlertAction\cf4 (\cf5 title\cf4 : \cf8 "OK"\cf4 , \cf5 style\cf4 : .\cf5 default\cf4 , \cf5 handler\cf4 : \{ (alert) 
\f0\b \cf2 in
\f1\b0 \cf4 \
                            
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 appDelegate\cf4 .\cf6 logoutAndClearDefaults\cf4 ()\
                        \}))\
                        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf5 present\cf4 (alert, \cf5 animated\cf4 : 
\f0\b \cf2 true
\f1\b0 \cf4 , \cf5 completion\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
                    \}\
                    
\f0\b \cf2 else
\f1\b0 \cf4 \
                    \{\
                        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 showToastOnViewController\cf4 (\cf6 title\cf4 : \cf8 "Error"\cf4 , \cf6 message\cf4 : responseData!.\cf6 valueForNullableKey\cf4 (\cf6 key\cf4 : \cf8 "message"\cf4 ), \cf6 position\cf4 : \cf5 pos\cf4 .\cf6 top\cf4 , \cf6 controller\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 , \cf6 image\cf4 :
\f0\b \cf2 nil
\f1\b0 \cf4 )\
                    \}\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  \{\
                    
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 showToastOnViewController\cf4 (\cf6 title\cf4 : \cf8 "Error"\cf4 , \cf6 message\cf4 : responseData?.\cf6 valueForNullableKey\cf4 (\cf6 key\cf4 : \cf6 kMessage\cf4 ) ?? \cf8 ""\cf4 , \cf6 position\cf4 : \cf5 pos\cf4 .\cf6 top\cf4 , \cf6 controller\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 , \cf6 image\cf4 :
\f0\b \cf2 nil
\f1\b0 \cf4 )\
                \}\
            \}\
        \}\
\
******************************************Impliemantation\
\

\f0\b \cf2 extension
\f1\b0 \cf4  \cf9 HomeVC\cf4  : \cf7 CBCentralManagerDelegate\cf4  \{\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf10 centralManagerDidUpdateState\cf4 (\cf10 _\cf4  central: \cf7 CBCentralManager\cf4 ) \{\
        \cf11 //        print("******##****** centralManagerDidUpdateState", central)\cf4 \
        
\f0\b \cf2 if
\f1\b0 \cf4  central.\cf5 state\cf4  != .\cf5 unsupported\cf4  \{\
            
\f0\b \cf2 if
\f1\b0 \cf4  (central.\cf5 state\cf4  == .\cf5 poweredOn\cf4 )\{\
                \
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 centralManager\cf4 ?.\cf5 scanForPeripherals\cf4 (\cf5 withServices\cf4 : [\cf12 Constants\cf4 .\cf6 SERVICE_UUID\cf4 ], \cf5 options\cf4 : [\cf5 CBCentralManagerScanOptionAllowDuplicatesKey\cf4  : 
\f0\b \cf2 true
\f1\b0 \cf4 ])\
            \}\
\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf10 centralManager\cf4 (\cf10 _\cf4  central: \cf7 CBCentralManager\cf4 , \cf10 didDiscover\cf4  peripheral: \cf7 CBPeripheral\cf4 , \cf10 advertisementData\cf4 : [\cf7 String\cf4  : 
\f0\b \cf2 Any
\f1\b0 \cf4 ], \cf10 rssi\cf4  RSSI: \cf7 NSNumber\cf4 ) \{\
\
\
   \cf11 ******##****** get Devices*****************************\cf4 \
\
                
\f0\b \cf2 var
\f1\b0 \cf4  peripheralName = cachedPeripheralNames[peripheral.\cf5 identifier\cf4 .\cf6 description\cf4 ] ?? \cf8 "unknown"\cf4 \
        \
                
\f0\b \cf2 if
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  advertisementName = advertisementData[\cf5 CBAdvertisementDataLocalNameKey\cf4 ] 
\f0\b \cf2 as
\f1\b0 \cf4 ? \cf7 String\cf4  \{\
        \
                    peripheralName = advertisementName\
                    cachedPeripheralNames[peripheral.\cf5 identifier\cf4 .\cf6 description\cf4 ] = peripheralName\
                \}\
                
\f0\b \cf2 let
\f1\b0 \cf4  device = \cf12 Device\cf4 (\cf6 peripheral\cf4 : peripheral, \cf6 name\cf4 : peripheralName)\
        \
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 addOrUpdatePeripheralList\cf4 (\cf6 device\cf4 : device, \cf6 list\cf4 : &visibleDevices)\
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 addOrUpdatePeripheralList\cf4 (\cf6 device\cf4 : device, \cf6 list\cf4 : &cachedDevices)\
\
\
\
       \cf11 ******##****** peripheral", periphera\cf4 \
        
\f0\b \cf2 if
\f1\b0 \cf4  (advertisementData[\cf5 CBAdvertisementDataLocalNameKey\cf4 ] != 
\f0\b \cf2 nil
\f1\b0 \cf4  )\{\
            
\f0\b \cf2 let
\f1\b0 \cf4  str = advertisementData[\cf5 CBAdvertisementDataLocalNameKey\cf4 ] 
\f0\b \cf2 as
\f1\b0 \cf4 ? \cf7 String\cf4  ?? \cf8 ""\cf4 \
            
\f0\b \cf2 let
\f1\b0 \cf4  advertisementData = str.\cf5 components\cf4 (\cf5 separatedBy\cf4 : \cf8 "|"\cf4 )\
            
\f0\b \cf2 let
\f1\b0 \cf4  userdata = \cf12 EdBlockDataModal\cf4 ()\
            
\f0\b \cf2 if
\f1\b0 \cf4  (advertisementData.\cf5 count\cf4  > \cf13 1\cf4 ) \{\
                userdata.\cf6 strUserId\cf4  = advertisementData [\cf13 0\cf4 ]\
                userdata.\cf6 strFullName\cf4  = advertisementData [\cf13 1\cf4 ]\
                userdata.\cf6 strEmail\cf4  = advertisementData [\cf13 2\cf4 ]\
                userdata.\cf6 strProfileImage\cf4  = advertisementData [\cf13 3\cf4 ]\
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 addOrUpdateUsersList\cf4 (\cf6 user\cf4 : userdata, \cf6 list\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 .\cf6 appDelegate\cf4 .\cf6 arrBLTUserList\cf4 )\
            \}\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf10 centralManager\cf4 (\cf10 _\cf4  central: \cf7 CBCentralManager\cf4 , \cf10 didDisconnectPeripheral\cf4  peripheral: \cf7 CBPeripheral\cf4 , \cf10 error\cf4 : \cf7 Error\cf4 ?) \{\
        \cf11 //        print("******##****** DISCONNECTED", peripheral)\cf4 \
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf10 centralManager\cf4 (\cf10 _\cf4  central: \cf7 CBCentralManager\cf4 , \cf10 didFailToConnect\cf4  peripheral: \cf7 CBPeripheral\cf4 , \cf10 error\cf4 : \cf7 Error\cf4 ?) \{\
        \cf11 //        print("******##****** FAILED", peripheral)\cf4 \
\
    \}\
\
\}\
\
\
\
}